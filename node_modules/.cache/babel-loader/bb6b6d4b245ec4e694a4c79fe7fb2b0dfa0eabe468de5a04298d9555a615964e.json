{"ast":null,"code":"var _jsxFileName = \"/Users/satendragangwar/Desktop/Reactjs/Business_app/businessapp/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Step 1: Set up state to manage the input value\n  const [name, setName] = useState(\"\");\n\n  // Step 2: Load the name from localStorage when the component mounts\n  useEffect(() => {\n    const storedName = localStorage.getItem(\"name\"); // Get the saved name from localStorage\n    if (storedName) {\n      setName(storedName); // If a name is found, set it in the state\n    }\n  }, []); // Empty dependency array makes this effect run once on mount\n\n  // Step 3: Handle input change\n  const handleInputChange = e => {\n    setName(e.target.value); // Update the name state when input changes\n  };\n\n  // Step 4: Save the name to localStorage\n  const saveToLocalStorage = () => {\n    localStorage.setItem(\"name\", name); // Save the name in localStorage\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Local Storage Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your name\",\n      value: name,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveToLocalStorage,\n      children: \"Save Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Stored Name: \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yFX/thdr3dMdWKRwvTuphhEy2lc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","name","setName","storedName","localStorage","getItem","handleInputChange","e","target","value","saveToLocalStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/satendragangwar/Desktop/Reactjs/Business_app/businessapp/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  // Step 1: Set up state to manage the input value\n  const [name, setName] = useState(\"\");\n\n  // Step 2: Load the name from localStorage when the component mounts\n  useEffect(() => {\n    const storedName = localStorage.getItem(\"name\"); // Get the saved name from localStorage\n    if (storedName) {\n      setName(storedName); // If a name is found, set it in the state\n    }\n  }, []); // Empty dependency array makes this effect run once on mount\n\n  // Step 3: Handle input change\n  const handleInputChange = (e) => {\n    setName(e.target.value); // Update the name state when input changes\n  };\n\n  // Step 4: Save the name to localStorage\n  const saveToLocalStorage = () => {\n    localStorage.setItem(\"name\", name); // Save the name in localStorage\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Local Storage Example</h1>\n\n      {/* Step 5: Input field for user to enter their name */}\n      <input\n        type=\"text\"\n        placeholder=\"Enter your name\"\n        value={name}\n        onChange={handleInputChange}\n      />\n\n      {/* Step 6: Button to save the name to localStorage */}\n      <button onClick={saveToLocalStorage}>Save Name</button>\n\n      {/* Step 7: Display the stored name */}\n      <p>Stored Name: {name}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMO,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IACjD,IAAIF,UAAU,EAAE;MACdD,OAAO,CAACC,UAAU,CAAC,CAAC,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,MAAMG,iBAAiB,GAAIC,CAAC,IAAK;IAC/BL,OAAO,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BN,YAAY,CAACO,OAAO,CAAC,MAAM,EAAEV,IAAI,CAAC,CAAC,CAAC;EACtC,CAAC;EAED,oBACEH,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBf,OAAA;MAAAe,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG9BnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,iBAAiB;MAC7BV,KAAK,EAAER,IAAK;MACZmB,QAAQ,EAAEd;IAAkB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eAGFnB,OAAA;MAAQuB,OAAO,EAAEX,kBAAmB;MAAAG,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGvDnB,OAAA;MAAAe,QAAA,GAAG,eAAa,EAACZ,IAAI;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV;AAACjB,EAAA,CAzCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}