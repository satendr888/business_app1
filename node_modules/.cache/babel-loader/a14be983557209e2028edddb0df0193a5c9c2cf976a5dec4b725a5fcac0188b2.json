{"ast":null,"code":"var _jsxFileName = \"/Users/satendragangwar/Desktop/Reactjs/Business_app/businessapp/src/pages/test.jsx\",\n  _s = $RefreshSig$();\nimport \"./Test.css\";\nimport React, { useState } from \"react\";\nimport { Carousel } from \"react-bootstrap\";\nimport ReactPlayer from \"react-player\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCarousel = () => {\n  _s();\n  const videoProperties = [{\n    id: 1,\n    title: \"Video 1\",\n    src: 'https://www.youtube.com/watch?v=ZaWQql80sg8',\n    credit: \"Video by cottonbro from Pexels\"\n  }, {\n    id: 2,\n    title: \"Video 2\",\n    src: 'https://www.youtube.com/watch?v=ZaWQql80sg8',\n    credit: \"Video by cottonbro from Pexels\"\n  }, {\n    id: 3,\n    title: \"Video 3\",\n    src: 'https://www.youtube.com/watch?v=ZaWQql80sg8',\n    credit: \"Video by cottonbro from Pexels\"\n  }];\n\n  // State to store the playback positions for each video\n  const [playbackPositions, setPlaybackPositions] = useState(videoProperties.reduce((acc, video) => {\n    acc[video.id] = 0; // Initialize each video's position to 0\n    return acc;\n  }, {}));\n\n  // Update the playback position of a video as it progresses\n  const handleProgress = (videoId, playedSeconds) => {\n    setPlaybackPositions(prevPositions => ({\n      ...prevPositions,\n      [videoId]: playedSeconds\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Carousel, {\n      children: videoProperties.map(videoObj => {\n        return /*#__PURE__*/_jsxDEV(Carousel.Item, {\n          children: /*#__PURE__*/_jsxDEV(ReactPlayer, {\n            url: videoObj.src,\n            playing: true // Autoplay enabled\n            ,\n            controls: false // Controls removed\n            // muted={true}        // Video is muted for autoplay\n            ,\n            loop: true // Loop enabled\n            // width=\"100%\"        // Adjust width if necessary\n            // height=\"100%\"      // Adjust height if necessary\n            // Start the video at the last saved position\n            ,\n            played: playbackPositions[videoObj.id],\n            onProgress: ({\n              playedSeconds\n            }) => handleProgress(videoObj.id, playedSeconds)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, videoObj.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCarousel, \"A6g9kQvJiV2M/JcqEAS/ByG1b18=\");\n_c = VideoCarousel;\nexport default VideoCarousel;\nvar _c;\n$RefreshReg$(_c, \"VideoCarousel\");","map":{"version":3,"names":["React","useState","Carousel","ReactPlayer","jsxDEV","_jsxDEV","VideoCarousel","_s","videoProperties","id","title","src","credit","playbackPositions","setPlaybackPositions","reduce","acc","video","handleProgress","videoId","playedSeconds","prevPositions","className","children","map","videoObj","Item","url","playing","controls","loop","played","onProgress","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/satendragangwar/Desktop/Reactjs/Business_app/businessapp/src/pages/test.jsx"],"sourcesContent":["import \"./Test.css\";\nimport React, { useState } from \"react\";\nimport { Carousel } from \"react-bootstrap\";\nimport ReactPlayer from \"react-player\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n \nconst VideoCarousel = () => {\n  const videoProperties = [\n    {\n      id: 1,\n      title: \"Video 1\",\n      src: 'https://www.youtube.com/watch?v=ZaWQql80sg8',\n      credit: \"Video by cottonbro from Pexels\",\n    },\n    {\n      id: 2,\n      title: \"Video 2\",\n      src: 'https://www.youtube.com/watch?v=ZaWQql80sg8',\n      credit: \"Video by cottonbro from Pexels\",\n    },\n    {\n      id: 3,\n      title: \"Video 3\",\n      src: 'https://www.youtube.com/watch?v=ZaWQql80sg8',\n      credit: \"Video by cottonbro from Pexels\",\n    },\n  ];\n\n  // State to store the playback positions for each video\n  const [playbackPositions, setPlaybackPositions] = useState(\n    videoProperties.reduce((acc, video) => {\n      acc[video.id] = 0; // Initialize each video's position to 0\n      return acc;\n    }, {})\n  );\n\n  // Update the playback position of a video as it progresses\n  const handleProgress = (videoId, playedSeconds) => {\n    setPlaybackPositions((prevPositions) => ({\n      ...prevPositions,\n      [videoId]: playedSeconds,\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n        {/* <div>\n           <span>helllo</span><br/>\n           <span>helllo</span>\n        </div> */}\n        {/* <div> */}\n        <Carousel>\n        {videoProperties.map((videoObj) => {\n          return (\n            <Carousel.Item key={videoObj.id}>\n              <ReactPlayer\n                url={videoObj.src}\n                playing={true}      // Autoplay enabled\n                controls={false}    // Controls removed\n                // muted={true}        // Video is muted for autoplay\n                loop={true}         // Loop enabled\n                // width=\"100%\"        // Adjust width if necessary\n                // height=\"100%\"      // Adjust height if necessary\n                // Start the video at the last saved position\n                played={playbackPositions[videoObj.id]}\n                onProgress={({ playedSeconds }) => handleProgress(videoObj.id, playedSeconds)}\n              />\n              \n            </Carousel.Item>\n          );\n        })}\n      </Carousel>\n        {/* </div> */}\n      \n    </div>\n  );\n};\n \nexport default VideoCarousel;\n"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,WAAW,MAAM,cAAc;AACtC,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,eAAe,GAAG,CACtB;IACEC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,SAAS;IAChBC,GAAG,EAAE,6CAA6C;IAClDC,MAAM,EAAE;EACV,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,SAAS;IAChBC,GAAG,EAAE,6CAA6C;IAClDC,MAAM,EAAE;EACV,CAAC,EACD;IACEH,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,SAAS;IAChBC,GAAG,EAAE,6CAA6C;IAClDC,MAAM,EAAE;EACV,CAAC,CACF;;EAED;EACA,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGb,QAAQ,CACxDO,eAAe,CAACO,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;IACrCD,GAAG,CAACC,KAAK,CAACR,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACnB,OAAOO,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CACP,CAAC;;EAED;EACA,MAAME,cAAc,GAAGA,CAACC,OAAO,EAAEC,aAAa,KAAK;IACjDN,oBAAoB,CAAEO,aAAa,KAAM;MACvC,GAAGA,aAAa;MAChB,CAACF,OAAO,GAAGC;IACb,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEf,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAMhBlB,OAAA,CAACH,QAAQ;MAAAqB,QAAA,EACRf,eAAe,CAACgB,GAAG,CAAEC,QAAQ,IAAK;QACjC,oBACEpB,OAAA,CAACH,QAAQ,CAACwB,IAAI;UAAAH,QAAA,eACZlB,OAAA,CAACF,WAAW;YACVwB,GAAG,EAAEF,QAAQ,CAACd,GAAI;YAClBiB,OAAO,EAAE,IAAK,CAAM;YAAA;YACpBC,QAAQ,EAAE,KAAM,CAAI;YACpB;YAAA;YACAC,IAAI,EAAE,IAAK,CAAS;YACpB;YACA;YACA;YAAA;YACAC,MAAM,EAAElB,iBAAiB,CAACY,QAAQ,CAAChB,EAAE,CAAE;YACvCuB,UAAU,EAAEA,CAAC;cAAEZ;YAAc,CAAC,KAAKF,cAAc,CAACO,QAAQ,CAAChB,EAAE,EAAEW,aAAa;UAAE;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/E;QAAC,GAZgBX,QAAQ,CAAChB,EAAE;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAchB,CAAC;MAEpB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGR,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAtEID,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AAwEnB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}