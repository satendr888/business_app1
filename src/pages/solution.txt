#include <iostream>
#include <vector>
#include <unordered_set>
#include <algorithm>

using namespace std;

bool contains(const vector<int>& nums, int target) {
    int n = nums.size();
    for (int i = 0; i < n; i++) {
        if (nums[i] == target) {
            return true;
        }
    }
    return false;
}

int longestConsecutive(vector<int>& nums) {
    int n = nums.size();
    int longestConsecutiveSequence = 0;
    
    for (auto num : nums) {
        int currentNumber = num;
        int currentConsecutiveSequence = 1;
        
        while (contains(nums, currentNumber + 1)) {
            currentNumber += 1;
            currentConsecutiveSequence += 1;
        }
        
        longestConsecutiveSequence = max(longestConsecutiveSequence, currentConsecutiveSequence);
    }
    
    return longestConsecutiveSequence;
}

int main() {
    int n;
    cout << "Enter the size of the array: ";
    cin >> n;
    
    vector<int> nums(n);
    cout << "Enter the elements of the array: ";
    for (int i = 0; i < n; i++) {
        cin >> nums[i];
    }
    
    int result = longestConsecutive(nums);
    cout << "The length of the longest consecutive sequence is: " << result << endl;
    
    return 0;
}
